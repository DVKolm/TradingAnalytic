
package com.example.ta;

import com.example.ta.config.SpringFXMLLoader;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Scene;
import javafx.stage.Stage;
import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.SpringApplication;
import org.springframework.context.ConfigurableApplicationContext;

import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;

@Slf4j
public class JavaFxApplication extends Application {

    private ConfigurableApplicationContext springContext;
    private Stage primaryStage;
    private TrayIcon trayIcon;
    private SystemTray systemTray;

    @Override
    public void init() {
        log.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Spring Boot –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞...");
        springContext = SpringApplication.run(TradingAnalyticsApplication.class);
        log.info("Spring Boot –∫–æ–Ω—Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");

        // üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º implicit exit –≤ false, —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª–æ—Å—å –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞
        Platform.setImplicitExit(false);
    }

    @Override
    public void start(Stage primaryStage) {
        this.primaryStage = primaryStage;

        try {
            log.info("–ó–∞–ø—É—Å–∫ JavaFX –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...");

            SpringFXMLLoader loader = springContext.getBean(SpringFXMLLoader.class);
            Scene scene = new Scene(loader.load("/com/example/ta/main-view.fxml"), 1400, 900);

            primaryStage.setTitle("Trading Analytics - –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏");
            primaryStage.setScene(scene);
            primaryStage.setMinWidth(1200);
            primaryStage.setMinHeight(800);

            primaryStage.setMaximized(true);

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç—Ä–µ—è
            setupSystemTray();

            // üîß –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è - –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è –≤ —Ç—Ä–µ–π
            primaryStage.setOnCloseRequest(event -> {
                event.consume(); // –û—Ç–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ
                hideToTray();
            });

            primaryStage.show();
            log.info("JavaFX –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ");

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ JavaFX –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", e);
            Platform.exit();
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç—Ä–µ—è
     */
    private void setupSystemTray() {
        if (!SystemTray.isSupported()) {
            log.warn("SystemTray –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ");
            return;
        }

        systemTray = SystemTray.getSystemTray();

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∫–æ–Ω–∫—É
        Image trayImage = loadTrayIcon();

        // –°–æ–∑–¥–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –º–µ–Ω—é
        PopupMenu trayMenu = new PopupMenu();

        // –ü—É–Ω–∫—Ç "–ó–∞–∫—Ä—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é"
        MenuItem exitItem = new MenuItem("–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");
        exitItem.addActionListener(e -> exitApplication());

        trayMenu.add(exitItem);

        // –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É —Ç—Ä–µ—è
        trayIcon = new TrayIcon(trayImage, "Trading Analytics", trayMenu);
        trayIcon.setImageAutoSize(true);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        trayIcon.addActionListener(e -> showFromTray());

        try {
            systemTray.add(trayIcon);
            log.info("–°–∏—Å—Ç–µ–º–Ω—ã–π —Ç—Ä–µ–π —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
        } catch (AWTException e) {
            log.error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç—Ä–µ–π", e);
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç—Ä–µ—è
     */
    private Image loadTrayIcon() {
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å app.ico
            InputStream iconStream = getClass().getResourceAsStream("/app.ico");
            if (iconStream != null) {
                BufferedImage bufferedImage = ImageIO.read(iconStream);
                // üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
                if (bufferedImage != null) {
                    return bufferedImage.getScaledInstance(16, 16, Image.SCALE_SMOOTH);
                } else {
                    log.warn("app.ico –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω ImageIO (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç ICO)");
                }
            } else {
                log.warn("app.ico –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ—Å—É—Ä—Å–∞—Ö");
            }
        } catch (IOException e) {
            log.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å app.ico: {}", e.getMessage());
        }

        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∫–æ–Ω–∫—É, —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é
        log.info("–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç—Ä–µ—è");
        return createDefaultIcon();
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –∏–∫–æ–Ω–∫—É –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
     */
    private BufferedImage createDefaultIcon() {
        BufferedImage defaultIcon = new BufferedImage(16, 16, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d = defaultIcon.createGraphics();

        try {
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);

            // –†–∏—Å—É–µ–º —Ñ–æ–Ω
            g2d.setColor(new Color(52, 152, 219)); // –°–∏–Ω–∏–π —Ü–≤–µ—Ç
            g2d.fillRoundRect(1, 1, 14, 14, 4, 4);

            // –†–∏—Å—É–µ–º —Ä–∞–º–∫—É
            g2d.setColor(new Color(41, 128, 185)); // –¢–µ–º–Ω–µ–µ —Å–∏–Ω–∏–π
            g2d.drawRoundRect(1, 1, 14, 14, 4, 4);

            // üîß –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
            g2d.setColor(Color.WHITE);
            g2d.setFont(new Font("Arial", Font.BOLD, 8));

            String text = "TA";
            FontMetrics fm = g2d.getFontMetrics();

            // –í—ã—á–∏—Å–ª—è–µ–º —Ç–æ—á–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
            int textWidth = fm.stringWidth(text);
            int textHeight = fm.getAscent();

            // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—Å–µ–π –∏–∫–æ–Ω–∫–∏ (16x16)
            int x = (16 - textWidth) / 2;
            int y = (16 - textHeight) / 2 + textHeight;

            g2d.drawString(text, x, y);

        } finally {
            g2d.dispose();
        }

        return defaultIcon;
    }

    /**
     * –°–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç—Ä–µ–π
     */
    private void hideToTray() {
        if (trayIcon == null) {
            log.warn("TrayIcon –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—ã—á–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ");
            exitApplication();
            return;
        }

        Platform.runLater(() -> {
            primaryStage.hide();
            log.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–≤–µ—Ä–Ω—É—Ç–æ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç—Ä–µ–π");

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            try {
                trayIcon.displayMessage(
                        "Trading Analytics",
                        "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–≤–µ—Ä–Ω—É—Ç–æ –≤ —Ç—Ä–µ–π. –î–≤–∞–∂–¥—ã –∫–ª–∏–∫–Ω–∏—Ç–µ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.",
                        TrayIcon.MessageType.INFO
                );
            } catch (Exception e) {
                log.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç—Ä–µ—è: {}", e.getMessage());
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç—Ä–µ—è
     */
    private void showFromTray() {
        Platform.runLater(() -> {
            if (primaryStage != null) {
                primaryStage.show();
                primaryStage.toFront();
                primaryStage.requestFocus();

                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                if (primaryStage.isIconified()) {
                    primaryStage.setIconified(false);
                }

                log.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç—Ä–µ—è");
            }
        });
    }

    /**
     * –ü–æ–ª–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    private void exitApplication() {
        log.info("–ü–æ–ª–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...");

        // –£–¥–∞–ª—è–µ–º –∏–∫–æ–Ω–∫—É –∏–∑ —Ç—Ä–µ—è
        if (systemTray != null && trayIcon != null) {
            try {
                systemTray.remove(trayIcon);
                log.info("–ò–∫–æ–Ω–∫–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç—Ä–µ—è");
            } catch (Exception e) {
                log.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∫–æ–Ω–∫–∏ –∏–∑ —Ç—Ä–µ—è: {}", e.getMessage());
            }
        }

        // üîß –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–∫—Ä—ã—Ç–∏—è
        Platform.runLater(() -> {
            try {
                if (springContext != null && springContext.isActive()) {
                    springContext.close();
                    log.info("Spring –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞–∫—Ä—ã—Ç");
                }
            } catch (Exception e) {
                log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ Spring –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞", e);
            }

            Platform.exit();

            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–≤–∏—Å–ª–æ
            new Thread(() -> {
                try {
                    Thread.sleep(2000);
                    System.exit(0);
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                }
            }).start();
        });
    }

    @Override
    public void stop() {
        log.info("–í—ã–∑–≤–∞–Ω –º–µ—Ç–æ–¥ stop()...");

        if (springContext != null && springContext.isActive()) {
            try {
                springContext.close();
                log.info("Spring –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞–∫—Ä—ã—Ç –≤ stop()");
            } catch (Exception e) {
                log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ Spring –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ stop()", e);
            }
        }
    }
}