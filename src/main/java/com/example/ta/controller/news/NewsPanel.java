
package com.example.ta.controller.news;

import com.example.ta.domain.news.NewsMessage;
import com.example.ta.domain.news.SourceType;
import com.example.ta.repository.NewsMessageRepository;
import com.example.ta.service.MediaDownloadService; // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
import com.example.ta.service.TelegramNewsService;
import javafx.application.Platform;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.image.Image; // –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
import javafx.scene.image.ImageView; // –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
import javafx.scene.layout.*;
import javafx.scene.text.Font;
import javafx.scene.text.FontPosture;
import javafx.scene.text.FontWeight;
import lombok.Getter;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;

import java.io.File;
import java.io.FileInputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.regex.Pattern;

@Component
@Slf4j
public class NewsPanel extends VBox {

    @Getter
    private final TelegramNewsService telegramNewsService;
    private final NewsMessageRepository newsMessageRepository;
    private final MediaDownloadService mediaDownloadService; // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
    private final VBox newsContainer;
    private final ScheduledExecutorService scheduler;
    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm");

    // –ö—Ä–∞—Å–∏–≤—ã–µ —à—Ä–∏—Ñ—Ç—ã –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π
    private static final Font TITLE_FONT = Font.font("Segoe UI", FontWeight.BOLD, 18);
    private static final Font CHANNEL_FONT = Font.font("Segoe UI Semibold", FontWeight.SEMI_BOLD, 13);
    private static final Font MESSAGE_FONT = Font.font("Segoe UI", FontWeight.NORMAL, 14);
    private static final Font TIME_FONT = Font.font("Segoe UI", FontWeight.LIGHT, 11);
    private static final Font NO_NEWS_FONT = Font.font("Segoe UI", FontPosture.ITALIC, 13);

    // –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç–º–æ–¥–∑–∏
    private static final Pattern EMOJI_PATTERN = Pattern.compile(
            "[\\x{1F600}-\\x{1F64F}]|" +  // —ç–º–æ—Ü–∏–∏
                    "[\\x{1F300}-\\x{1F5FF}]|" +  // —Å–∏–º–≤–æ–ª—ã –∏ –ø–∏–∫—Ç–æ–≥—Ä–∞–º–º—ã
                    "[\\x{1F680}-\\x{1F6FF}]|" +  // —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –∫–∞—Ä—Ç—ã
                    "[\\x{1F1E0}-\\x{1F1FF}]|" +  // —Ñ–ª–∞–≥–∏
                    "[\\x{2600}-\\x{26FF}]|" +    // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
                    "[\\x{2700}-\\x{27BF}]|" +    // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
                    "[\\x{1F900}-\\x{1F9FF}]|" +  // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–º–æ–¥–∑–∏
                    "[\\x{1F018}-\\x{1F270}]|" +  // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
                    "[\\x{238C}-\\x{2454}]|" +    // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
                    "[\\x{20D0}-\\x{20FF}]|" +    // –∫–æ–º–±–∏–Ω–∏—Ä—É—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã
                    "[\\x{FE0F}]|" +              // —Å–µ–ª–µ–∫—Ç–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
                    "[\\x{200D}]"                 // —Å–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å –Ω—É–ª–µ–≤–æ–π —à–∏—Ä–∏–Ω—ã
    );

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - –¥–æ–±–∞–≤–ª—è–µ–º MediaDownloadService
    public NewsPanel(TelegramNewsService telegramNewsService,
                     NewsMessageRepository newsMessageRepository,
                     MediaDownloadService mediaDownloadService) {
        this.telegramNewsService = telegramNewsService;
        this.newsMessageRepository = newsMessageRepository;
        this.mediaDownloadService = mediaDownloadService; // –î–æ–±–∞–≤–ª—è–µ–º
        this.scheduler = Executors.newScheduledThreadPool(1);

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
        this.setSpacing(15);
        this.setPadding(new Insets(15));
        this.setPrefWidth(380);
        this.setMaxWidth(380);
        this.setPrefHeight(Region.USE_COMPUTED_SIZE);
        VBox.setVgrow(this, Priority.ALWAYS);
        this.setStyle(
                "-fx-background-color: linear-gradient(to bottom, #f8f9fa 0%, #e9ecef 100%);" +
                        "-fx-border-color: #dee2e6;" +
                        "-fx-border-width: 1;" +
                        "-fx-border-radius: 12;" +
                        "-fx-background-radius: 12;" +
                        "-fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 8, 0, 0, 2);"
        );

        Label titleLabel = new Label("üì∞ –í—Å–µ –ù–æ–≤–æ—Å—Ç–∏");
        titleLabel.setFont(TITLE_FONT);
        titleLabel.setAlignment(Pos.CENTER);
        titleLabel.setMaxWidth(Double.MAX_VALUE);
        titleLabel.setStyle(
                "-fx-text-fill: linear-gradient(to right, #2c3e50 0%, #3498db 100%);" +
                        "-fx-effect: dropshadow(gaussian, rgba(0,0,0,0.2), 2, 0, 0, 1);"
        );

        Separator separator = new Separator();
        separator.setStyle("-fx-background-color: linear-gradient(to right, transparent 0%, #bdc3c7 50%, transparent 100%);");

        newsContainer = new VBox();
        newsContainer.setSpacing(12);
        newsContainer.setPadding(new Insets(0, 0, 15, 0));

        ScrollPane scrollPane = new ScrollPane(newsContainer);
        scrollPane.setFitToWidth(true);
        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);
        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);
        VBox.setVgrow(scrollPane, Priority.ALWAYS);
        scrollPane.setMaxHeight(Double.MAX_VALUE);
        scrollPane.setPrefHeight(Region.USE_COMPUTED_SIZE);
        scrollPane.setStyle(
                "-fx-background-color: transparent;" +
                        "-fx-background: transparent;" +
                        "-fx-border-color: transparent;"
        );

        scrollPane.lookupAll(".scroll-bar").forEach(node ->
                node.setStyle(
                        "-fx-background-color: #ecf0f1;" +
                                "-fx-border-radius: 6;" +
                                "-fx-background-radius: 6;"
                )
        );

        this.getChildren().addAll(titleLabel, separator, scrollPane);

        loadNews();
        startAutoRefresh();
    }

    private void loadNews() {
        try {
            List<NewsMessage> news = newsMessageRepository.findLatestNewsFromAllSources(15);

            Platform.runLater(() -> {
                newsContainer.getChildren().clear();

                if (news.isEmpty()) {
                    VBox noNewsBox = createNoNewsMessage();
                    newsContainer.getChildren().add(noNewsBox);
                } else {
                    for (NewsMessage message : news) {
                        newsContainer.getChildren().add(createNewsItem(message));
                    }
                }

                log.debug("–ó–∞–≥—Ä—É–∂–µ–Ω–æ {} –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤", news.size());
            });

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π", e);
            Platform.runLater(() -> {
                VBox errorBox = createErrorMessage();
                newsContainer.getChildren().clear();
                newsContainer.getChildren().add(errorBox);
            });
        }
    }

    private VBox createNoNewsMessage() {
        VBox noNewsBox = new VBox();
        noNewsBox.setAlignment(Pos.CENTER);
        noNewsBox.setSpacing(10);
        noNewsBox.setPadding(new Insets(30));
        noNewsBox.setStyle(
                "-fx-background-color: rgba(255,255,255,0.8);" +
                        "-fx-border-color: #e9ecef;" +
                        "-fx-border-width: 1;" +
                        "-fx-border-radius: 10;" +
                        "-fx-background-radius: 10;"
        );

        Label icon = new Label("üì≠");
        icon.setFont(Font.font("Segoe UI", 36));

        Label message = new Label("–ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç");
        message.setFont(Font.font("Segoe UI", FontWeight.SEMI_BOLD, 16));
        message.setStyle("-fx-text-fill: #2c3e50;");

        Label hint = new Label("–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞–Ω–∞–ª—ã Telegram –∏ Twitter");
        hint.setFont(NO_NEWS_FONT);
        hint.setStyle("-fx-text-fill: #7f8c8d;");
        hint.setTextAlignment(javafx.scene.text.TextAlignment.CENTER);

        noNewsBox.getChildren().addAll(icon, message, hint);
        return noNewsBox;
    }

    private VBox createErrorMessage() {
        VBox errorBox = new VBox();
        errorBox.setAlignment(Pos.CENTER);
        errorBox.setSpacing(10);
        errorBox.setPadding(new Insets(20));
        errorBox.setStyle(
                "-fx-background-color: #ffebee;" +
                        "-fx-border-color: #ef5350;" +
                        "-fx-border-width: 1;" +
                        "-fx-border-radius: 8;" +
                        "-fx-background-radius: 8;"
        );

        Label errorLabel = new Label("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π");
        errorLabel.setFont(Font.font("Segoe UI", FontWeight.SEMI_BOLD, 14));
        errorLabel.setStyle("-fx-text-fill: #c62828;");

        errorBox.getChildren().add(errorLabel);
        return errorBox;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–∏ - –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    private VBox createNewsItem(NewsMessage message) {
        VBox newsItem = new VBox();
        newsItem.setSpacing(8);
        newsItem.setPadding(new Insets(14));
        newsItem.setStyle(
                "-fx-background-color: linear-gradient(to bottom, #ffffff 0%, #f8f9fa 100%);" +
                        "-fx-border-color: #e3e6ea;" +
                        "-fx-border-width: 1;" +
                        "-fx-border-radius: 12;" +
                        "-fx-background-radius: 12;" +
                        "-fx-effect: dropshadow(gaussian, rgba(0,0,0,0.08), 6, 0, 0, 2);"
        );

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–Ω–∞–ª–∞ - –ë–ï–ó –í–†–ï–ú–ï–ù–ò
        HBox headerBox = new HBox();
        headerBox.setAlignment(Pos.CENTER_LEFT);
        headerBox.setSpacing(8);

        String sourceIcon;
        String sourceName;
        String sourceStyle;

        if (message.getSourceType() == SourceType.X) {
            sourceIcon = "ùïè"; // –ù–æ–≤—ã–π –ª–æ–≥–æ—Ç–∏–ø X
            sourceName = message.getTwitterDisplayName() != null ?
                    message.getTwitterDisplayName() :
                    "@" + message.getTwitterUsername();
            sourceStyle = "-fx-text-fill: #000000;"; // –ß–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è X
        } else {
            sourceIcon = "üì±";
            sourceName = message.getChannelTitle() != null ?
                    message.getChannelTitle() :
                    "@" + message.getChannelUsername();
            sourceStyle = "-fx-text-fill: #2c3e50;";
        }

        Label channelIcon = new Label(sourceIcon);
        channelIcon.setFont(Font.font("Segoe UI", FontWeight.BOLD, 14));

        Label channelLabel = new Label(removeEmojis(sourceName));
        channelLabel.setFont(CHANNEL_FONT);
        channelLabel.setStyle(sourceStyle);

        headerBox.getChildren().addAll(channelIcon, channelLabel);

        // –û–ë–™–ï–î–ò–ù–ï–ù–ù–ê–Ø –°–¢–†–û–ö–ê: –≤—Ä–µ–º—è + –∏—Å—Ç–æ—á–Ω–∏–∫
        HBox timeAndSourceBox = new HBox();
        timeAndSourceBox.setAlignment(Pos.CENTER_LEFT);
        timeAndSourceBox.setSpacing(12);
        timeAndSourceBox.setPadding(new Insets(4, 0, 0, 0));

        // –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥")
        Label relativeTimeLabel = new Label(getRelativeTime(message.getMessageDate()));
        relativeTimeLabel.setFont(Font.font("Segoe UI", FontWeight.NORMAL, 12));
        relativeTimeLabel.setStyle(
                "-fx-text-fill: #6c757d;" +
                        "-fx-background-color: rgba(108, 117, 125, 0.1);" +
                        "-fx-background-radius: 8;" +
                        "-fx-padding: 4 8 4 8;"
        );

        // –¢–æ—á–∫–∞-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        Label separator = new Label("‚Ä¢");
        separator.setFont(Font.font("Segoe UI", 12));
        separator.setStyle("-fx-text-fill: #adb5bd;");

        // –ò—Å—Ç–æ—á–Ω–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è (X –∏–ª–∏ Telegram)
        String sourceLabelText = message.getSourceType() == SourceType.X ? "X" : "Telegram";
        Label sourceLabel = new Label(sourceLabelText);
        sourceLabel.setFont(Font.font("Segoe UI", FontWeight.SEMI_BOLD, 11));
        sourceLabel.setStyle(
                "-fx-text-fill: " + (message.getSourceType() == SourceType.X ? "#000000" : "#2c3e50") + ";" +
                        "-fx-background-color: " + (message.getSourceType() == SourceType.X ? "rgba(0,0,0,0.1)" : "rgba(44,62,80,0.1)") + ";" +
                        "-fx-background-radius: 6;" +
                        "-fx-padding: 3 8 3 8;"
        );

        timeAndSourceBox.getChildren().addAll(relativeTimeLabel, separator, sourceLabel);

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å—Ç—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–∏+–∏—Å—Ç–æ—á–Ω–∏–∫–∞
        newsItem.getChildren().add(headerBox);
        newsItem.getChildren().add(timeAndSourceBox);

        // –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        ImageView imageView = createImageView(message);
        if (imageView != null) {
            log.debug("–î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –Ω–æ–≤–æ—Å—Ç—å {}", message.getId());

            // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
            VBox imageContainer = new VBox();
            imageContainer.setAlignment(Pos.CENTER);
            imageContainer.setPadding(new Insets(8, 0, 8, 0));
            imageContainer.getChildren().add(imageView);

            newsItem.getChildren().add(imageContainer);
        } else {
            log.debug("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏ {}", message.getId());
        }

        // –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        String cleanText = removeEmojis(message.getMessageText());
        Label messageLabel = new Label(truncateText(cleanText, 220));
        messageLabel.setWrapText(true);
        messageLabel.setFont(MESSAGE_FONT);
        messageLabel.setStyle(
                "-fx-text-fill: #2c3e50;" +
                        "-fx-line-spacing: 2px;"
        );

        newsItem.getChildren().add(messageLabel);

        // –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è —Ç–≤–∏—Ç–æ–≤ (—Ç–µ–ø–µ—Ä—å –¥–ª—è X)
        if (message.getSourceType() == SourceType.X &&
                (message.getLikeCount() != null || message.getRetweetCount() != null)) {

            HBox metricsBox = new HBox();
            metricsBox.setSpacing(15);
            metricsBox.setAlignment(Pos.CENTER_LEFT);
            metricsBox.setStyle("-fx-padding: 8 0 0 0;");

            if (message.getLikeCount() != null && message.getLikeCount() > 0) {
                Label likesLabel = new Label("‚ù§Ô∏è " + formatNumber(message.getLikeCount()));
                likesLabel.setFont(Font.font("Segoe UI", FontWeight.NORMAL, 11));
                likesLabel.setStyle(
                        "-fx-text-fill: #e74c3c;" +
                                "-fx-background-color: rgba(231, 76, 60, 0.1);" +
                                "-fx-background-radius: 6;" +
                                "-fx-padding: 3 6 3 6;"
                );
                metricsBox.getChildren().add(likesLabel);
            }

            if (message.getRetweetCount() != null && message.getRetweetCount() > 0) {
                Label retweetsLabel = new Label("üîÑ " + formatNumber(message.getRetweetCount()));
                retweetsLabel.setFont(Font.font("Segoe UI", FontWeight.NORMAL, 11));
                retweetsLabel.setStyle(
                        "-fx-text-fill: #27ae60;" +
                                "-fx-background-color: rgba(39, 174, 96, 0.1);" +
                                "-fx-background-radius: 6;" +
                                "-fx-padding: 3 6 3 6;"
                );
                metricsBox.getChildren().add(retweetsLabel);
            }

            if (!metricsBox.getChildren().isEmpty()) {
                newsItem.getChildren().add(metricsBox);
            }
        }

        // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        newsItem.setOnMouseEntered(e -> {
            String hoverColor = message.getSourceType() == SourceType.X ?
                    "rgba(0,0,0,0.2)" : "rgba(52,152,219,0.3)";
            String borderColor = message.getSourceType() == SourceType.X ?
                    "#000000" : "#3498db";

            newsItem.setStyle(
                    "-fx-background-color: linear-gradient(to bottom, #ffffff 0%, #e8f4fd 100%);" +
                            "-fx-border-color: " + borderColor + ";" +
                            "-fx-border-width: 2;" +
                            "-fx-border-radius: 12;" +
                            "-fx-background-radius: 12;" +
                            "-fx-effect: dropshadow(gaussian, " + hoverColor + ", 12, 0, 0, 4);" +
                            "-fx-cursor: hand;" +
                            "-fx-scale-x: 1.02;" +
                            "-fx-scale-y: 1.02;"
            );
        });

        newsItem.setOnMouseExited(e -> {
            newsItem.setStyle(
                    "-fx-background-color: linear-gradient(to bottom, #ffffff 0%, #f8f9fa 100%);" +
                            "-fx-border-color: #e3e6ea;" +
                            "-fx-border-width: 1;" +
                            "-fx-border-radius: 12;" +
                            "-fx-background-radius: 12;" +
                            "-fx-effect: dropshadow(gaussian, rgba(0,0,0,0.08), 6, 0, 0, 2);" +
                            "-fx-scale-x: 1.0;" +
                            "-fx-scale-y: 1.0;"
            );
        });

        return newsItem;
    }

    private String getRelativeTime(LocalDateTime messageDate) {
        LocalDateTime now = LocalDateTime.now();
        long minutes = ChronoUnit.MINUTES.between(messageDate, now);

        if (minutes < 1) {
            return "—Ç–æ–ª—å–∫–æ —á—Ç–æ";
        } else if (minutes < 60) {
            return minutes + " –º–∏–Ω –Ω–∞–∑–∞–¥";
        } else if (minutes < 1440) { // –º–µ–Ω—å—à–µ —Å—É—Ç–æ–∫
            long hours = minutes / 60;
            return hours + " —á –Ω–∞–∑–∞–¥";
        } else {
            long days = minutes / 1440;
            if (days == 1) {
                return "–≤—á–µ—Ä–∞";
            } else if (days < 7) {
                return days + " –¥–Ω –Ω–∞–∑–∞–¥";
            } else {
                return messageDate.format(DateTimeFormatter.ofPattern("dd.MM.yyyy"));
            }
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1.2k, 15.3k, 1.1M)
     */
    private String formatNumber(Integer number) {
        if (number == null) return "0";

        if (number < 1000) {
            return number.toString();
        } else if (number < 1000000) {
            double k = number / 1000.0;
            return String.format("%.1fk", k);
        } else {
            double m = number / 1000000.0;
            return String.format("%.1fM", m);
        }
    }



    /**
     * –°–æ–∑–¥–∞–µ—Ç ImageView –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∏–Ω–∏–∞—Ç—é—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    private ImageView createImageView(NewsMessage message) {
        log.debug("–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–¥–∏–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è ID: {}", message.getId());

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –º–µ–¥–∏–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        if (message.getHasMedia() == null || !message.getHasMedia()) {
            log.debug("–°–æ–æ–±—â–µ–Ω–∏–µ {} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–¥–∏–∞", message.getId());
            return null;
        }

        log.debug("–°–æ–æ–±—â–µ–Ω–∏–µ {} —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–¥–∏–∞. –¢–∏–ø: {}", message.getId(), message.getMediaType());

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if (!"photo".equals(message.getMediaType())) {
            log.debug("–¢–∏–ø –º–µ–¥–∏–∞ {} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è", message.getMediaType());
            return null;
        }

        String thumbnailPath = message.getMediaThumbnailPath();
        log.debug("–ü—É—Ç—å –∫ –º–∏–Ω–∏–∞—Ç—é—Ä–µ: {}", thumbnailPath);

        if (thumbnailPath == null) {
            log.warn("–ü—É—Ç—å –∫ –º–∏–Ω–∏–∞—Ç—é—Ä–µ –Ω–µ –∑–∞–¥–∞–Ω –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {}", message.getId());
            return null;
        }

        if (!mediaDownloadService.thumbnailExists(thumbnailPath)) {
            log.warn("–§–∞–π–ª –º–∏–Ω–∏–∞—Ç—é—Ä—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {}", thumbnailPath);
            return null;
        }

        try {
            File imageFile = new File(thumbnailPath);
            if (!imageFile.exists()) {
                log.error("–§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {}", thumbnailPath);
                return null;
            }

            log.debug("–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {}", imageFile.getAbsolutePath());

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ —á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª
            if (!imageFile.canRead()) {
                log.error("–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {}", thumbnailPath);
                return null;
            }

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            Image image;
            try {
                // –°–ø–æ—Å–æ–± 1: –ß–µ—Ä–µ–∑ URI
                image = new Image(imageFile.toURI().toString());
            } catch (Exception e) {
                log.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ—Ä–µ–∑ URI, –ø—Ä–æ–±—É–µ–º FileInputStream: {}", e.getMessage());
                try {
                    // –°–ø–æ—Å–æ–± 2: –ß–µ—Ä–µ–∑ FileInputStream
                    image = new Image(new FileInputStream(imageFile));
                } catch (Exception e2) {
                    log.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {}", thumbnailPath, e2);
                    return null;
                }
            }

            if (image.isError()) {
                log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {}", image.getException().getMessage());
                return null;
            }

            log.debug("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –†–∞–∑–º–µ—Ä: {}x{}", image.getWidth(), image.getHeight());

            ImageView imageView = new ImageView(image);

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            imageView.setPreserveRatio(true);
            imageView.setFitWidth(330); // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞
            imageView.setFitHeight(200); // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
            imageView.setSmooth(true);

            // –°—Ç–∏–ª–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            imageView.setStyle(
                    "-fx-effect: dropshadow(gaussian, rgba(0,0,0,0.2), 4, 0, 0, 2);" +
                            "-fx-background-radius: 8;"
            );

            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –∫–ª–∏–∫–µ
            imageView.setOnMouseClicked(e -> {
                log.debug("–ö–ª–∏–∫ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é: {}", thumbnailPath);
            });

            imageView.setOnMouseEntered(e -> {
                imageView.setStyle(
                        "-fx-effect: dropshadow(gaussian, rgba(52,152,219,0.4), 8, 0, 0, 4);" +
                                "-fx-cursor: hand;" +
                                "-fx-background-radius: 8;"
                );
            });

            imageView.setOnMouseExited(e -> {
                imageView.setStyle(
                        "-fx-effect: dropshadow(gaussian, rgba(0,0,0,0.2), 4, 0, 0, 2);" +
                                "-fx-background-radius: 8;"
                );
            });

            log.debug("ImageView —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {}", message.getId());
            return imageView;

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ ImageView –¥–ª—è: {}", thumbnailPath, e);
            return null;
        }
    }

    private String removeEmojis(String text) {
        if (text == null || text.isEmpty()) {
            return "";
        }

        String cleanText = EMOJI_PATTERN.matcher(text).replaceAll("");
        cleanText = cleanText.replaceAll("\\s+", " ").trim();
        return cleanText;
    }

    private String truncateText(String text, int maxLength) {
        if (text == null) return "";
        if (text.length() <= maxLength) return text;
        return text.substring(0, maxLength) + "...";
    }

    private void startAutoRefresh() {
        scheduler.scheduleAtFixedRate(this::loadNews, 30, 30, TimeUnit.SECONDS);
    }

    public void refresh() {
        loadNews();
    }

    public void shutdown() {
        if (scheduler != null && !scheduler.isShutdown()) {
            scheduler.shutdown();
        }
    }

    public void debugMediaFiles() {
        try {
            List<NewsMessage> news = newsMessageRepository.findLatestNewsFromAllSources(5);

            log.info("=== –û–¢–õ–ê–î–ö–ê –ú–ï–î–ò–ê–§–ê–ô–õ–û–í ===");
            for (NewsMessage message : news) {
                log.info("–°–æ–æ–±—â–µ–Ω–∏–µ ID: {}", message.getId());
                log.info("  - –ö–∞–Ω–∞–ª: {}", message.getChannelTitle());
                log.info("  - –ï—Å—Ç—å –º–µ–¥–∏–∞: {}", message.getHasMedia());
                log.info("  - –¢–∏–ø –º–µ–¥–∏–∞: {}", message.getMediaType());
                log.info("  - URL –º–µ–¥–∏–∞: {}", message.getMediaUrl());
                log.info("  - –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {}", message.getMediaFilePath());
                log.info("  - –ü—É—Ç—å –∫ –º–∏–Ω–∏–∞—Ç—é—Ä–µ: {}", message.getMediaThumbnailPath());

                if (message.getMediaThumbnailPath() != null) {
                    File file = new File(message.getMediaThumbnailPath());
                    log.info("  - –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {}", file.exists());
                    log.info("  - –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {} –±–∞–π—Ç", file.exists() ? file.length() : 0);
                }
                log.info("  ---");
            }

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤", e);
        }
    }

}